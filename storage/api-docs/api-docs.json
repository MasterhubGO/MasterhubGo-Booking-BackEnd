{
    "openapi": "3.0.0",
    "info": {
        "title": "MusterhubGo",
        "description": "This api is for working with musterhabGo",
        "contact": {
            "email": "artem.yablochnyi@gmail.com"
        },
        "version": "1.0"
    },
    "servers": [
        {
            "url": "http://127.0.0.1:8000/",
            "description": "Laravel Swagger API server"
        }
    ],
    "paths": {
        "/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Authenticate a user",
                "description": "Authenticates a user and returns the user data along with the authentication token",
                "operationId": "loginUser",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LoginRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User authenticated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "user": {
                                            "$ref": "#/components/schemas/User"
                                        },
                                        "token": {
                                            "description": "Authentication token",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Validation Error"
                    }
                }
            }
        },
        "/logout": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Logout current user",
                "description": "Logs out the currently authenticated user",
                "operationId": "logoutUser",
                "responses": {
                    "200": {
                        "description": "User logged out successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User logged out successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/register": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Register a new user",
                "description": "Creates a new user and returns the user data along with the authentication token",
                "operationId": "registerUser",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RegisterRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User registered successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "user": {
                                            "$ref": "#/components/schemas/User"
                                        },
                                        "token": {
                                            "description": "Authentication token",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "422": {
                        "description": "Validation Error"
                    }
                }
            }
        },
        "/api/service-feedbacks/{id}": {
            "get": {
                "tags": [
                    "Service feedback"
                ],
                "summary": "Get service feedback information",
                "description": "Returns service feedback data by id",
                "operationId": "service-feedbacks-id",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Service feedback id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BusinessServiceFeedback"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/personal-cabinet": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Get list of users",
                "description": "Returns list of users",
                "operationId": "personal-cabinet",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/personal-cabinet/{id}": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Get user information",
                "description": "Returns user data",
                "operationId": "personal-cabinet-id",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": "1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "User"
                ],
                "summary": "Update existing user",
                "description": "Returns updated user data",
                "operationId": "personal-cabinet-update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": "1"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserUpdateRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "User"
                ],
                "summary": "Delete existing user",
                "description": "Deletes a record and returns no content",
                "operationId": "personal-cabinet-delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Project id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": "1"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/currencies/": {
            "get": {
                "tags": [
                    "Currency"
                ],
                "summary": "Get currencies list",
                "description": "Returns currencies list",
                "operationId": "currency",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CurrencyResource"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/currencies": {
            "post": {
                "tags": [
                    "Currency"
                ],
                "summary": "Creates new currency",
                "description": "Returns created currency data",
                "operationId": "currency-create",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CurrencyCreateRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CurrencyResource"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnprocessableContentResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/currencies/{id}": {
            "get": {
                "tags": [
                    "Currency"
                ],
                "summary": "Get currency information",
                "description": "Returns currency data by id",
                "operationId": "currency-id",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Currency id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Currency"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Currency"
                ],
                "summary": "Updates currency by id",
                "description": "Returns updated currency",
                "operationId": "currency-update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Currency id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CurrencyUpdateRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CurrencyResource"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnprocessableContentResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Currency"
                ],
                "summary": "Deletes currency by id",
                "description": "Deletes currency by id",
                "operationId": "currency-delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Currency id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Created"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "BusinessServiceFeedback": {
                "title": "Service Feedback",
                "description": "BusinessServiceFeedback model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "alpha_code": {
                        "title": "alpha_code",
                        "description": "Alphabetical code",
                        "type": "string",
                        "example": "RUB"
                    },
                    "numeric_code": {
                        "title": "Numeric code",
                        "description": "Email",
                        "type": "string",
                        "example": ""
                    },
                    "fraction": {
                        "title": "Created at",
                        "description": "Created at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    },
                    "sign": {
                        "title": "Updated at",
                        "description": "Updated at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Business Service Feedback"
                }
            },
            "Currency": {
                "title": "Currency",
                "description": "Currency model. Implements country currency codes according to ISO 4217 standard",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "alpha_code": {
                        "title": "Alpha code",
                        "description": "Currency alphabetical code",
                        "type": "string",
                        "example": "RUB"
                    },
                    "numeric_code": {
                        "title": "Numeric code",
                        "description": "Currency numeric code",
                        "type": "string",
                        "example": "643"
                    },
                    "fraction": {
                        "title": "Fraction",
                        "description": "Number of fractional units (e.g. in dollar 100 cents)",
                        "type": "integer",
                        "format": "int32",
                        "minimum": 0,
                        "multipleOf": 10,
                        "example": 100
                    },
                    "sign": {
                        "title": "Sign",
                        "description": "Currency sign",
                        "type": "string",
                        "example": "₽",
                        "nullable": true
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Currency"
                }
            },
            "User": {
                "title": "User",
                "description": "User model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "name": {
                        "title": "Name",
                        "description": "Name",
                        "type": "string",
                        "example": "John"
                    },
                    "email": {
                        "title": "Email",
                        "description": "Email",
                        "type": "string",
                        "example": "example@example.com"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "Created at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "Updated at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    },
                    "gender": {
                        "title": "Gender",
                        "description": "Gender",
                        "type": "string",
                        "example": "male"
                    },
                    "user_role": {
                        "title": "Role",
                        "description": "Role bayer or seller",
                        "type": "string",
                        "example": "buyer"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "User"
                }
            },
            "CurrencyCreateRequest": {
                "title": "Currency create request",
                "description": "Creates currency",
                "required": [
                    "alpha_code",
                    "numeric_code"
                ],
                "properties": {
                    "alpha_code": {
                        "title": "alpha_code",
                        "description": "Alphabetical code",
                        "type": "string",
                        "maxLength": 3,
                        "minLength": 3,
                        "example": "BYN"
                    },
                    "numeric_code": {
                        "title": "numeric_code",
                        "description": "numeric code",
                        "type": "string",
                        "maxLength": 3,
                        "minLength": 3,
                        "example": "936"
                    },
                    "fraction": {
                        "title": "fraction",
                        "description": "Number of fractional units (e.g. in dollar 100 cents)",
                        "type": "integer",
                        "default": 100,
                        "minimum": 0,
                        "multipleOf": 10,
                        "example": 100
                    },
                    "sign": {
                        "title": "sign",
                        "description": "Currency sign",
                        "type": "string",
                        "example": "₽"
                    }
                },
                "type": "object"
            },
            "CurrencyUpdateRequest": {
                "title": "Currency update request",
                "description": "Updates currency",
                "required": [],
                "properties": {
                    "alpha_code": {
                        "title": "alpha_code",
                        "description": "Alphabetical code",
                        "type": "string",
                        "maxLength": 3,
                        "minLength": 3,
                        "example": "BYN"
                    },
                    "numeric_code": {
                        "title": "numeric_code",
                        "description": "numeric code",
                        "type": "string",
                        "maxLength": 3,
                        "minLength": 3,
                        "example": "936"
                    },
                    "fraction": {
                        "title": "fraction",
                        "description": "Number of fractional units (e.g. in dollar 100 cents)",
                        "type": "integer",
                        "default": 100,
                        "minimum": 0,
                        "multipleOf": 10,
                        "example": 100
                    },
                    "sign": {
                        "title": "sign",
                        "description": "Currency sign",
                        "type": "string",
                        "example": "₽"
                    }
                },
                "type": "object"
            },
            "LoginRequest": {
                "title": "Update User request",
                "description": "Update user request body data",
                "required": [
                    "name"
                ],
                "properties": {
                    "name": {
                        "title": "Name",
                        "description": "Name",
                        "type": "string",
                        "example": "John"
                    },
                    "email": {
                        "title": "Email",
                        "description": "Email",
                        "type": "string",
                        "example": "example@example.com"
                    },
                    "password": {
                        "title": "Password",
                        "description": "Password",
                        "type": "string",
                        "example": "password"
                    },
                    "password_confirmation": {
                        "title": "Password confirmation",
                        "description": "Password confirmation",
                        "type": "string",
                        "example": "password"
                    }
                },
                "type": "object"
            },
            "RegisterRequest": {
                "title": "Update User request",
                "description": "Update user request body data",
                "required": [
                    "name"
                ],
                "properties": {
                    "name": {
                        "title": "Name",
                        "description": "Name",
                        "type": "string",
                        "example": "John"
                    },
                    "email": {
                        "title": "Email",
                        "description": "Email",
                        "type": "string",
                        "example": "example@example.com"
                    },
                    "password": {
                        "title": "Password",
                        "description": "Password",
                        "type": "string",
                        "example": "password"
                    },
                    "password_confirmation": {
                        "title": "Password confirmation",
                        "description": "Password confirmation",
                        "type": "string",
                        "example": "password"
                    }
                },
                "type": "object"
            },
            "UserUpdateRequest": {
                "title": "Update User request",
                "description": "Update user request body data",
                "required": [
                    "name"
                ],
                "properties": {
                    "name": {
                        "title": "Name",
                        "description": "Name",
                        "type": "string",
                        "example": "John"
                    },
                    "email": {
                        "title": "Email",
                        "description": "Email",
                        "type": "string",
                        "example": "example@example.com"
                    },
                    "gender": {
                        "title": "Gender",
                        "description": "Gender",
                        "type": "string",
                        "example": "male"
                    },
                    "user_role": {
                        "title": "Role",
                        "description": "Role bayer or seller",
                        "type": "string",
                        "example": "buyer"
                    }
                },
                "type": "object"
            },
            "CurrencyResource": {
                "title": "CurrencyResource",
                "description": "Currency resource",
                "properties": {
                    "data": {
                        "title": "Data",
                        "description": "Data wrapper",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Currency"
                        }
                    }
                },
                "type": "object",
                "xml": {
                    "name": "CurrencyResource"
                }
            },
            "UserResource": {
                "title": "UserResource",
                "description": "User resource",
                "properties": {
                    "data": {
                        "title": "Data",
                        "description": "Data wrapper",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/User"
                        }
                    }
                },
                "type": "object",
                "xml": {
                    "name": "UserResource"
                }
            },
            "UnprocessableContentResponse": {
                "title": "UnprocessableContentResponse",
                "description": "Response when validation failed",
                "properties": {
                    "message": {
                        "title": "message",
                        "description": "Error message",
                        "type": "string"
                    },
                    "errors": {
                        "$ref": "#/components/schemas/UnprocessableContentResponseError"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "UnprocessableContentResponse"
                }
            },
            "UnprocessableContentResponseError": {
                "title": "Error",
                "description": "Error",
                "properties": {
                    "name": {
                        "title": "name",
                        "description": "Faild field name",
                        "type": "array",
                        "items": {
                            "description": "Error message",
                            "type": "string"
                        }
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Error"
                }
            }
        },
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "scheme": "bearer"
            }
        }
    }
}